{"componentChunkName":"component---src-templates-blog-list-js","path":"/3","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"孙某 Blog"}},"allMarkdownRemark":{"edges":[{"node":{"id":"f2d84e9f-cd91-5741-a912-b0678ce2abde","excerpt":"ViewModel是Android Jetpack的重要组成部分，加上LiveData还可以自己更新数据，业务数据相关的逻辑应该都放到这里。   直接上代码，例子实现数据初始化显示，点击变更按钮后，数据自己更新。 Layout: 两个TextView，一个Button User…","fields":{"slug":"/android/viewmodel/"},"frontmatter":{"date":"11 March, 2020","title":"Android ViewModel 例子"}}},{"node":{"id":"fa54d5ec-bbe9-5f74-ac7b-e551b61836b0","excerpt":"今天用Android官方文档试用ViewModel时发现之前的lifecycle-extensions中的 ViewModelProviders.of()不能用了。 看了 Lifecycle 的 Release Note才发现，lifecycle-extensions…","fields":{"slug":"/android/lifecycle-22/"},"frontmatter":{"date":"11 March, 2020","title":"弃用 ViewModelProviders.of()，lifecycle2.2变化"}}},{"node":{"id":"c1508590-4c1f-5c4f-99a0-d7525fb9a763","excerpt":"之前讲了view binding，这回说一下data binding. 测试环境 android-studio 3.6.1   找到app下的build.gradle文件，添加data-binding支持   建立data类: xml必须用layout…","fields":{"slug":"/android/data-binding/"},"frontmatter":{"date":"10 March, 2020","title":"android data binding"}}},{"node":{"id":"006c3f61-cb08-55ae-9a66-2db28e99f8c8","excerpt":"最简单概括hook的一句话就是，它可以让你在不编写 class 的情况下使用 state 以及其他的 React 特性。 React官网给出的3个使用的理由： 完全可选的。 你无需重写任何已有代码就可以在一些组件中尝试 Hook。但是如果你不想，你不必现在就去学习或使用 Hook…","fields":{"slug":"/react/hook/"},"frontmatter":{"date":"10 March, 2020","title":"react hook特性"}}},{"node":{"id":"ae4c9cbe-dd5e-53f6-af7d-aa67ac55fabb","excerpt":"测试环境 android-studio 3.6.1   找到app下的build.gradle文件，添加view-binding支持   我们在新建的工程里的Layout xml中，加入一个Button，再给Text加一个id，如果没有ID…","fields":{"slug":"/android/view-binding/"},"frontmatter":{"date":"09 March, 2020","title":"android view binding"}}}]}},"pageContext":{"limit":5,"skip":10,"numPages":7,"currentPage":3}}}