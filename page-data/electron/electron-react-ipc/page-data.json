{"componentChunkName":"component---src-templates-blog-post-js","path":"/electron/electron-react-ipc/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"孙某 Blog"}},"markdownRemark":{"id":"e687ef96-5559-5ff4-a6c7-cad7567f0d73","excerpt":"electron react开发环境已经完成了。接下来讲一下，electron与react之前的通信。 react相当于ui，electron相当于本地的操作，当需要本地操作的时候react就需要调用electron的接口。 electron react之间通信使用ipcRenderer，首先引用electron…","html":"<p>electron react开发环境已经完成了。接下来讲一下，electron与react之前的通信。<br>\nreact相当于ui，electron相当于本地的操作，当需要本地操作的时候react就需要调用electron的接口。</p>\n<p>electron react之间通信使用ipcRenderer，首先引用electron库的ipcRenderer<br>\n<code class=\"language-text\">const { ipcRenderer } = window.require(&#39;electron&#39;);</code><br>\n这里要注意的是 <font color=red>window</font>，只有加上window才能找到electron库。</p>\n<ol>\n<li>\n<p>react调用electron方法\nreact端：<br>\n<code class=\"language-text\">ipcRenderer.send(消息名称, 参数);</code><br>\n其中两中参数都是字符串，这样的调用会把这个消息发送到关注这个消息的electron函数中。\nelectron端：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ipcMain.on(消息名称, (event, arg) =&gt; {\nconsole.log(&quot;message comming.&quot;);\nevent.reply(返回消息名称, &quot;reply.&quot;);\n});</code></pre></div>\n<p>以上代码一般放在main.js或其它electron进程中。收到消息后，还可以用event的reply方法返回一些参数。</p>\n</li>\n<li>\n<p>electron调用react方法：<br>\nelectron端：<br>\n使用webContent的方法：\n<code class=\"language-text\">win.webContents.send(消息名称, 参数)</code><br>\n其中win是BrowserWindow的实例。\nreact端：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ipcRenderer.on(消息名称, (event, arg) =&gt; {\nconsole.log(&#39;callback:&#39;, arg);\n//do something\n});</code></pre></div>\n</li>\n</ol>\n<p>以上就是electron与react之前的通信方法。</p>","frontmatter":{"title":"electron react之间通信","tags":["react","electron","ipc"],"date":"February 26, 2020","description":"在electron react之前传递数据"}}},"pageContext":{"slug":"/electron/electron-react-ipc/","previous":{"fields":{"slug":"/javascript/javascript-enum/"},"frontmatter":{"title":"javascrip中的枚举类型","tags":["javascript","enum"]}},"next":{"fields":{"slug":"/flutter/environment/"},"frontmatter":{"title":"flutter开发环境的建立","tags":["android","flutter"]}}}}}