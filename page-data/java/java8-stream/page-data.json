{"componentChunkName":"component---src-templates-blog-post-js","path":"/java/java8-stream/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"孙某 Blog"}},"markdownRemark":{"id":"1637ca9a-7ac8-52d1-a25b-8e18c728fb1a","excerpt":"stream是java8新引入的包，具体可以参考官方文档\nhttps://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#package.description 包中主要是几种Steam和相关的Builder…","html":"<p>stream是java8新引入的包，具体可以参考官方文档\n<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#package.description\">https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#package.description</a><br>\n包中主要是几种Steam和相关的Builder，<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/DoubleStream.html\">DoubleStream</a>，<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html\">IntStream</a>，<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/LongStream.html\">LongStream</a>，<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html\">Stream<T></a>\n这几个Interface的方法基本相同。</p>\n<p>我的理解，Stream就是一个流水线，一个操作可以分成一系列的步骤，有中间操作，有结束操作。一旦调用了结束操作。这个结果就计算出来了。<br>\n调用的方法类似RxJava的一系列函数式的调用，也类似javascript的Promise的调用。主要是作用就是写代码写的更少，更清晰。  </p>\n<p>总体来说，stream有3个特点：<br>\n1. stream不存储数据<br>\n2. stream不改变源数据<br>\n3. stream的延迟执行特性<br>\n主要操作方法分类：</p>\n<table>\n    <tr>\n        <td colspan=3>Steam操作方法</td>\n    </tr>\n    <tr>\n        <td rowspan=2>中间操作(Intermediate operations)</td>\n        <td>无状态(Stateless)</td>\n        <td>unordered() filter() map() mapToInt() mapToLong() mapToDouble() flatMap() flatMapToInt() flatMapToLong() flatMapToDouble() peek()</td>\n    </tr>\n    <tr>\n        <td>有状态(Stateful)</td>\n        <td>distinct() sorted() sorted() limit() skip()</td>\n    </tr>\n    <tr>\n        <td rowspan=2>结束操作(Terminal operations)</td>\n        <td>非短路操作</td>\n        <td>forEach() forEachOrdered() toArray() reduce() collect() max() min() count()</td>\n    </tr>\n    <tr>\n        <td>短路操作(short-circuiting)</td>\n        <td>anyMatch() allMatch() noneMatch() findFirst() findAny()</td>\n    </tr>\n</table>\n<p>直接上代码吧：  </p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>stream</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StreamTest</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        users<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sun\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wukong\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        users<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zhu\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bajie\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        users<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sha\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"heshang\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//测试filter和forEach，打印\"wukong\"</span>\n        users<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">-></span>x<span class=\"token punctuation\">.</span><span class=\"token function\">getFirstName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sun\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">-></span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span><span class=\"token function\">getLastName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//测试map和collect, 得到一个新的只包含性的List </span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> firstNames <span class=\"token operator\">=</span> users<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token operator\">::</span><span class=\"token function\">getFirstName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        firstNames<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">-></span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>上面的代码选了中间操作和结束操作的几个例子，其它的函数用法类似，就不一一举例了。</p>","frontmatter":{"title":"java8 Stream","tags":["java","stream","java8"],"date":"March 15, 2020","description":"熟悉java8 stream, 可是使代码更清晰"}}},"pageContext":{"slug":"/java/java8-stream/","previous":{"fields":{"slug":"/java/java8-foreach/"},"frontmatter":{"title":"java8 forEach","tags":["java","java8"]}},"next":{"fields":{"slug":"/java/java8-predicate/"},"frontmatter":{"title":"java8 Predicate","tags":["java","predicate","java8"]}}}}}