{"componentChunkName":"component---src-templates-blog-post-js","path":"/java/rxjava/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"孙某 Blog"}},"markdownRemark":{"id":"856368ca-e342-552e-8836-e02f047e013f","excerpt":"例子比较简单，就是从通过Github的Api取用户相关的信息。显示在主界面上。\n代码地址：https://github.com/spmno/retrofit-test 先给出环境：在app的gradle加下面库，更新为最新版本。 布局比较简单，就用了一个EditText…","html":"<p>例子比较简单，就是从通过Github的Api取用户相关的信息。显示在主界面上。\n代码地址：<a href=\"https://github.com/spmno/retrofit-test\">https://github.com/spmno/retrofit-test</a></p>\n<p>先给出环境：在app的gradle加下面库，更新为最新版本。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  implementation &#39;com.squareup.retrofit2:retrofit:2.7.2&#39;\n  implementation &#39;com.squareup.retrofit2:converter-gson:2.7.2&#39;\n  implementation &#39;com.squareup.retrofit2:adapter-rxjava2:2.7.2&#39;\n  implementation &#39;com.squareup.okhttp3:okhttp:4.4.0&#39;\n  implementation &#39;com.squareup.okhttp3:logging-interceptor:4.4.0&#39;\n  implementation &quot;io.reactivex.rxjava2:rxjava:2.2.19&quot;\n  implementation &#39;io.reactivex.rxjava2:rxandroid:2.1.1&#39;\n\n  def lifecycle_version = &quot;2.2.0&quot;\n  // ViewModel\n  implementation &quot;androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version&quot;\n  // LiveData\n  implementation &quot;androidx.lifecycle:lifecycle-livedata:$lifecycle_version&quot;\n  // Lifecycles only (without ViewModel or LiveData)\n  implementation &quot;androidx.lifecycle:lifecycle-runtime:$lifecycle_version&quot;\n\n  // Saved state module for ViewModel\n  implementation &quot;androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version&quot;\n  // Annotation processor\n  annotationProcessor &quot;androidx.lifecycle:lifecycle-compiler:$lifecycle_version&quot;\n  // alternately - if using Java8, use the following instead of lifecycle-compiler\n  implementation &quot;androidx.lifecycle:lifecycle-common-java8:$lifecycle_version&quot;\n  // optional - ReactiveStreams support for LiveData\n  implementation &quot;androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version&quot;</code></pre></div>\n<p>布局比较简单，就用了一个EditText来显示取回来的数据。这里就不贴代码了。  </p>\n<ol>\n<li>\n<p>创建retrofit Api的interface:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>reactivex</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Observable</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">retrofit2<span class=\"token punctuation\">.</span>http</span><span class=\"token punctuation\">.</span>GET<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">retrofit2<span class=\"token punctuation\">.</span>http</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Path</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">GithubApi</span> <span class=\"token punctuation\">{</span>\n<span class=\"token annotation punctuation\">@GET</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"users/{name}\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">Observable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GithubUserResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getUserInfo</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Path</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>因为API的地址是<a href=\"https://api.github.com/users/%7Bname%7D%EF%BC%8C%E6%89%80%E4%BB%A5%E8%BF%99%E9%87%8C%E7%94%A8%E4%BA%86Path%E3%80%82\">https://api.github.com/users/{name}，所以这里用了Path。</a>\n如果是参数的话，还可以用Query，比如下面例子：</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">NewsApi</span> <span class=\"token punctuation\">{</span>\n<span class=\"token annotation punctuation\">@GET</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"top-headlines\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token class-name\">Observable</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NewsResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getNewsList</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sources\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> newsSource<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"apiKey\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> apiKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这种对应的API地址是：<a href=\"http://newsapi.org/v2/top-headlines?sources=techcrunch&#x26;apiKey=7d60a0fa1dec462eb682c0e256f709a8%E3%80%82\">http://newsapi.org/v2/top-headlines?sources=techcrunch&#x26;apiKey=7d60a0fa1dec462eb682c0e256f709a8。</a></p>\n</li>\n<li>\n<p>创建Retrofit Service:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> okhttp3<span class=\"token punctuation\">.</span><span class=\"token class-name\">OkHttpClient</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">okhttp3<span class=\"token punctuation\">.</span>logging</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">HttpLoggingInterceptor</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> retrofit2<span class=\"token punctuation\">.</span><span class=\"token class-name\">Retrofit</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">retrofit2<span class=\"token punctuation\">.</span>adapter<span class=\"token punctuation\">.</span>rxjava2</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">RxJava2CallAdapterFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">retrofit2<span class=\"token punctuation\">.</span>converter<span class=\"token punctuation\">.</span>gson</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">GsonConverterFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RetrofitService</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Retrofit</span> retrofit<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">T</span> <span class=\"token function\">createGithubService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> serviceClass<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">createService</span><span class=\"token punctuation\">(</span>serviceClass<span class=\"token punctuation\">,</span> <span class=\"token string\">\"https://api.github.com/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">T</span> <span class=\"token function\">createService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> serviceClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> baseUrl<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">HttpLoggingInterceptor</span> logging <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpLoggingInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// set your desired log level</span>\n    logging<span class=\"token punctuation\">.</span><span class=\"token function\">setLevel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpLoggingInterceptor</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Level</span><span class=\"token punctuation\">.</span>BODY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">OkHttpClient</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Builder</span> httpClient <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OkHttpClient</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// add your other interceptors …</span>\n\n    <span class=\"token comment\">// add logging as last interceptor</span>\n    httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">addInterceptor</span><span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// &lt;-- this is the important line!</span>\n\n    retrofit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Retrofit</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">baseUrl</span><span class=\"token punctuation\">(</span>baseUrl<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">addCallAdapterFactory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RxJava2CallAdapterFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">addConverterFactory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GsonConverterFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">client</span><span class=\"token punctuation\">(</span>httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> retrofit<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>serviceClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这里加了Okhttp的HttpLoggingInterceptor工具，这个工具可以将Request和Response的Log都打出来，方便调试。</p>\n</li>\n<li>\n<p>建立Github的ViewModel，存储LiveData对象：</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">androidx<span class=\"token punctuation\">.</span>lifecycle</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">MutableLiveData</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">androidx<span class=\"token punctuation\">.</span>lifecycle</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">ViewModel</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>reactivex<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>schedulers</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">AndroidSchedulers</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>reactivex<span class=\"token punctuation\">.</span>schedulers</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Schedulers</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GithubUserViewModel</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ViewModel</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">MutableLiveData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GithubUserResponse</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getGithubUserResponseMutableLiveData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> githubUserResponseMutableLiveData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setGithubUserResponseMutableLiveData</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MutableLiveData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GithubUserResponse</span><span class=\"token punctuation\">></span></span> githubUserResponseMutableLiveData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>githubUserResponseMutableLiveData <span class=\"token operator\">=</span> githubUserResponseMutableLiveData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">MutableLiveData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GithubUserResponse</span><span class=\"token punctuation\">></span></span> githubUserResponseMutableLiveData<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getUserInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">GithubApi</span> githubApi <span class=\"token operator\">=</span> <span class=\"token class-name\">RetrofitService</span><span class=\"token punctuation\">.</span><span class=\"token function\">createGithubService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GithubApi</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    githubApi<span class=\"token punctuation\">.</span><span class=\"token function\">getUserInfo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spmno\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">subscribeOn</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Schedulers</span><span class=\"token punctuation\">.</span><span class=\"token function\">io</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">observeOn</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AndroidSchedulers</span><span class=\"token punctuation\">.</span><span class=\"token function\">mainThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span>\n                userInfo <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>githubUserResponseMutableLiveData<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>userInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    throwable <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GithubApi\"</span><span class=\"token punctuation\">,</span> throwable<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//初始化LiveData</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">GithubUserResponse</span> githubUserResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GithubUserResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    githubUserResponseMutableLiveData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MutableLiveData</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>githubUserResponse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这里用了RxJava和Retrofit结合，将网络操作放到io线程，刷新UI的操作放到了主线程。</p>\n</li>\n<li>\n<p>MainActivity，创建ViewModel</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainActivity</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AppCompatActivity</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">ActivityMainBinding</span> activityMainBinding<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">GithubUserViewModel</span> githubUserViewModel<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    activityMainBinding <span class=\"token operator\">=</span> <span class=\"token class-name\">ActivityMainBinding</span><span class=\"token punctuation\">.</span><span class=\"token function\">inflate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LayoutInflater</span><span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setContentView</span><span class=\"token punctuation\">(</span>activityMainBinding<span class=\"token punctuation\">.</span><span class=\"token function\">getRoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    githubUserViewModel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ViewModelProvider</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GithubUserViewModel</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    githubUserViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    githubUserViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">getGithubUserResponseMutableLiveData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n            userInfo <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>\n                <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Main\"</span><span class=\"token punctuation\">,</span> userInfo<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                activityMainBinding<span class=\"token punctuation\">.</span>editText<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span>userInfo<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    githubUserViewModel<span class=\"token punctuation\">.</span><span class=\"token function\">getUserInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这个例子就结束了，在谷歌推荐的架构中没有用到Repository，主要是功能太简单了。</p>\n</li>\n</ol>","frontmatter":{"title":"RxJava, Retrofit, LiveData 简单例子","tags":["java","rxjava","retrofit","livedata"],"date":"March 18, 2020","description":"Android网络数据获取入门，用RxJava加Retrofit和LiveData获取数据并显示"}}},"pageContext":{"slug":"/java/rxjava/","previous":{"fields":{"slug":"/android/room/"},"frontmatter":{"title":"Android组件Room","tags":["android","room"]}},"next":{"fields":{"slug":"/java/dagger2/"},"frontmatter":{"title":"dagger2的使用","tags":["java","dagger2","di"]}}}}}