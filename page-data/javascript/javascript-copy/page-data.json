{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/javascript-copy/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"孙某 Blog"}},"markdownRemark":{"id":"c17916e6-65e3-5934-bd20-1340d0008f03","excerpt":"在javascript编程中，我们最常用的就是赋值（=）操作。 在javascript…","html":"<p>在javascript编程中，我们最常用的就是赋值（=）操作。<br>\n在javascript中，等号操作只是对对象地址的引用。<br>\n想真正创建另外的副本，我们就需要进行拷贝操作。<br>\n下面在介绍一下两种拷贝方案，深拷贝和浅拷贝。</p>\n<ul>\n<li>\n<p>浅拷贝<br>\n<code class=\"language-text\">Object.assign()</code> 方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象。<br>\n语法：<code class=\"language-text\">Object.assign(target, ...sources)</code>  返回目标对象。<br>\n拷贝的是属性值。假如源对象的属性值是一个对象的引用，那么它也只指向那个引用。  </p>\n<p>展开语法(Spread syntax), 构造字面量对象时,进行克隆或者属性拷贝：<br>\n<code class=\"language-text\">let objClone = { ...obj };</code></p>\n</li>\n<li>\n<p>深拷贝<br>\n将对象序列化为字符串，然后再将其反序列化<br>\n<code class=\"language-text\">obj1 = { a: 0 , b: { c: 0}};</code><br>\n<code class=\"language-text\">let obj3 = JSON.parse(JSON.stringify(obj1));</code></p>\n<p>NODE.JS 中的深拷贝  </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const v8 = require(&#39;v8&#39;);\nconst buf = v8.serialize({ a: 0 , b: { c: 0}});\nconst cloned = v8.deserialize(buf);```  </code></pre></div>\n</li>\n</ul>","frontmatter":{"title":"javascript 浅拷贝与深拷贝","tags":["javascript"],"date":"March 07, 2020","description":"javascript 浅拷贝与深拷贝"}}},"pageContext":{"slug":"/javascript/javascript-copy/","previous":{"fields":{"slug":"/myblog/markdown/"},"frontmatter":{"title":"markdown常用语法小记","tags":["markdown","blog"]}},"next":{"fields":{"slug":"/myblog/strapi-api/"},"frontmatter":{"title":"strapi提供api服务","tags":["strapi","restful"]}}}}}