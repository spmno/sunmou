{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript/object-vs-map/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"孙某 Blog"}},"markdownRemark":{"id":"e4c0736f-74de-5aff-83a7-e04481c8b8e9","excerpt":"在使用javascript时候，使用Object与Map的时候，概念比较模糊。这里做个对比，具体还需要参考MDN文档。 Key的取值： Object：字符串或Symbol Map：任何值(对象或者原始值)    创建方法： Object: // 对象初始化器（Object initialiser…","html":"<p>在使用javascript时候，使用<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a>与<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map\">Map</a>的时候，概念比较模糊。这里做个对比，具体还需要参考MDN文档。</p>\n<ol>\n<li>Key的取值：<br>\nObject：字符串或Symbol<br>\nMap：任何值(对象或者原始值)   </li>\n<li>创建方法：<br>\nObject:<br>\n// 对象初始化器（Object initialiser）或对象字面量（literal）<br>\n{ [ nameValuePair1[, nameValuePair2[, …nameValuePairN] ] ] }<br>\n// 以构造函数形式来调用<br>\nnew Object([value])<br>\nMap:<br>\nnew Map([iterable])  </li>\n<li>读：<br>\nObject: obj.key; 或者 obj[key];<br>\nMap: map.get(key);  </li>\n<li>写：<br>\nObject: obj.key = value; 或者 obj[key] = value;\nMap: map.set(key, value);</li>\n<li>Map支持迭代器，Object不支持。</li>\n</ol>\n<p>下面写下MDN中的对比：\nObjects 和 Maps 类似的是，它们都允许你按键存取一个值、删除键、检测一个键是否绑定了值。因此（并且也没有其他内建的替代方式了）过去我们一直都把对象当成 Maps 使用。不过 Maps 和 Objects 有一些重要的区别，在下列情况里使用 Map 会是更好的选择：</p>\n<p>一个Object的键只能是字符串或者 Symbols，但一个 Map 的键可以是任意值，包括函数、对象、基本类型。\nMap 中的键值是有序的，而添加到对象中的键则不是。因此，当对它进行遍历时，Map 对象是按插入的顺序返回键值。</p>\n<p>注意：自ECMAScript 2015规范以来，对象确实保留了字符串和Symbol键的创建顺序； 因此，在只有字符串键的对象上进行迭代将按插入顺序产生键。</p>\n<p>你可以通过 size 属性直接获取一个 Map 的键值对个数，而 Object 的键值对个数只能手动计算。\nMap 可直接进行迭代，而 Object 的迭代需要先获取它的键数组，然后再进行迭代。\nObject 都有自己的原型，原型链上的键名有可能和你自己在对象上的设置的键名产生冲突。\n注意：虽然 ES5 开始可以用 map = Object.create(null) 来创建一个没有原型的对象，但是这种用法不太常见。</p>\n<p>Map 在涉及频繁增删键值对的场景下会有些性能优势。\n</p>","frontmatter":{"title":"javascript Object与Map对比","tags":["javascript","object","map"],"date":"March 04, 2020","description":"javascript Object与Map对比 "}}},"pageContext":{"slug":"/javascript/object-vs-map/","previous":{"fields":{"slug":"/react/storybook/"},"frontmatter":{"title":"使用storybook测试自己组件","tags":["react","storybook"]}},"next":{"fields":{"slug":"/myblog/strapi/"},"frontmatter":{"title":"用strapi搭建一个内容管理系统","tags":["strapi","headless cms"]}}}}}